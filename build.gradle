buildscript {
	repositories {
		jcenter()
		mavenCentral()
		maven { url 'https://plugins.gradle.org/m2/' }
	}
	dependencies {
		//plugin needed to generate POJO from Avro schema
		classpath("com.commercehub.gradle.plugin:gradle-avro-plugin:0.14.2")
	}
}

plugins {
	id 'org.springframework.boot' version '2.2.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

apply plugin: "maven"
apply plugin: "java"
apply plugin: "com.commercehub.gradle.plugin.avro-base"

group = 'com.ankur.springboot.web'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	jcenter()
	mavenCentral()
	maven { url "https://repo.spring.io/snapshot" }
	maven { url "https://repo.spring.io/milestone" }
	maven { url "http://packages.confluent.io/maven/" }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql'
	implementation 'org.mapstruct:mapstruct:1.3.1.Final'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	compile "org.apache.avro:avro:1.9.2"
	compile 'io.confluent:kafka-avro-serializer:5.4.0'


	annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
	//point plugin to folder with avro schemas
	source("src/main/resources/schema")
	//point plugin to folder with generated POJOs
	outputDir = file("src/main/java")
}

compileJava.source(generateAvro.outputs)

test {
	useJUnitPlatform()
}
